<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
 	
 	
	<resultMap id="userSelectMap" type="user">
		<result property="userId" 			column="user_id" 			jdbcType="VARCHAR"/>
		<result property="userName"	column="user_name" 		jdbcType="VARCHAR" />
		<result property="password" 	column="password" 		jdbcType="VARCHAR" />
		<result property="phone" 				column="phone" 					jdbcType="NUMERIC" />
		<result property="nickName" 				column="nickname" 					jdbcType="VARCHAR" />
		<result property="address" 			column="address" 		jdbcType="VARCHAR" />
		<result property="postalCode" 				column="postal_code" 					jdbcType="VARCHAR" />
		<result property="role" 			column="role" 				jdbcType="CHAR"  />
		<result property="local" 		column="local" 			jdbcType="CHAR" />
		<result property="point" 			column="point" 			jdbcType="NUMERIC"/>
		<result property="userStatement" 			column="user_statement" 			jdbcType="CHAR"/>
		<result property="lastConnDate" 			column="last_conn_date" 			jdbcType="DATE"/>
		<result property="kakaoId" 			column="kakao_id" 			jdbcType="VARCHAR"/>
		<result property="naverId" 			column="naver_id" 			jdbcType="VARCHAR"/>
		<result property="facebookId" 			column="facebook_id" 			jdbcType="VARCHAR"/>
		<result property="blacklistCode" 			column="blacklist_code" 			jdbcType="CHAR"/>
		<result property="blacklistStartDate" 			column="blacklist_start_date" 			jdbcType="DATE"/>
		<result property="blacklistEndDate" 			column="blacklist_end_date" 			jdbcType="DATE"/>
		<result property="sellerCode" 			column="seller_code" 			jdbcType="CHAR"/>
		<result property="salesAmount" 			column="sales_amount" 			jdbcType="NUMERIC"/>
		<result property="salesCount" 			column="sales_count" 			jdbcType="NUMERIC"/>
		<result property="accountBank" 			column="account_bank" 			jdbcType="VARCHAR"/>
		<result property="accountNo" 			column="account_no" 			jdbcType="VARCHAR"/>
		
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="insertUser"		parameterType="user" >
	 	INSERT
		INTO users( user_id , user_name , password , phone , nickname, address, postal_code, role, 
		local, point, user_statement, last_conn_date, kakao_Id, naver_Id, facebook_Id, blacklist_code, blacklist_start_date,
		blacklist_end_date, seller_code, sales_amount, sales_count, account_bank, account_no) 
		VALUES	 (	#{userId} , #{userName} , #{password} , #{phone} , #{nickName} , #{address}, 
					#{postalCode} , #{role} , #{local} , #{point} , #{userStatement} , SYSDATE ,
					#{kakaoId:VARCHAR}, #{naverId:VARCHAR}, #{facebookId:VARCHAR} , #{blacklistCode:CHAR}, SYSDATE , SYSDATE ,
					#{sellerCode:CHAR}, #{salesAmount:NUMERIC}, #{salesCount:NUMERIC}, #{accountBank:VARCHAR}, #{accountNo:VARCHAR} )
	 </insert>
	 
	  <select 	id="selectUser"	parameterType="string"	resultMap="userSelectMap">
		SELECT
		 user_id , user_name , password , phone , nickname, address, postal_code, role, 
		local, point, user_statement, last_conn_date, kakao_Id, naver_Id, facebook_Id, blacklist_code, blacklist_start_date,
		blacklist_end_date, seller_code, sales_amount, sales_count, account_bank, account_no 		
		FROM users 
		WHERE user_id = #{value}
	 </select>
	 
	 <update	id="updateUser"	parameterType="user" >
	   	UPDATE users
	   	<set>
	   		user_id 	= #{userId} ,
	   		user_name  =  #{userName} ,
	   		nickname = #{nickName} ,
	   		
	   		
	   		
	   	</set>
	   	WHERE user_id = #{userId}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getUserList"  parameterType="search"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT user_id , user_name , email
											FROM users
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				user_id = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				user_name = #{searchKeyword}
													</if>
												</where>
											</if>
											ORDER BY user_id ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT user_id , user_name , email
						FROM users
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			user_id = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		user_name = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
</mapper>